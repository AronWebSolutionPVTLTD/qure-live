<script>
    // Function to fetch and replace the slide cart section
  function updateSlideCart() {
  fetch(`${window.Shopify.routes.root}?sections=slidecart`)
    .then(res => res.json())
    .then(response => {
      const slidecartHTML = response['slidecart']; // Use the section ID
      const slidecartContainer = document.querySelector('#shopify-section-slidecart');
  
      if (slidecartContainer && slidecartHTML) {
        // Create a new temporary container to hold the new HTML
        const tempContainer = document.createElement('div');
        tempContainer.innerHTML = slidecartHTML;
  
        const newSlidecartNode = tempContainer.firstElementChild;
  
        if (newSlidecartNode) {
          slidecartContainer.replaceWith(newSlidecartNode);
          // new sidecart timer 
          const sidecartTimerContainer = document.querySelector('.slide_cart .sidecart-timer-container');
          initSidecarTimer(sidecartTimerContainer);
         
          // sitewide timer (header) 
          const siteWideTimerContainer = document.querySelector('.announcement_bar.site-gamification-active .sidecart-timer-container');
          initSidecarTimer(siteWideTimerContainer);
  
          const customEvent = new CustomEvent('cartUpdated', {
            detail: {
              message: 'cart updated', 
              time: new Date()
            }
          });
          document.dispatchEvent(customEvent);
  
          const cartCountElement = document.querySelector('.nav__cart-count');
          if (cartCountElement) {
              cartCountElement.classList.remove('hidden');
          }
        }
      }
    })
    .catch(error => console.error('Error updating slide cart:', error));
  }

  // Create a mutation observer to watch for required elements
  const observer = new MutationObserver((mutations, observer) => {
    const slidecartContainer = document.querySelector('#shopify-section-slidecart');
    const cartCountElement = document.querySelector('.nav__cart-count');
    const timerContainer = document.querySelector('.slide_cart .sidecart-timer-container');
    
    // Check if all required elements are present
    if (slidecartContainer && cartCountElement && timerContainer) {
      console.log("updateSlideCart()")
      updateSlideCart();
      // Stop observing once all elements are found
      observer.disconnect();
    }
  });

  // Start observing the document for DOM changes
  observer.observe(document.documentElement, {
    childList: true,
    subtree: true
  });

  // Set a timeout to stop observing if elements aren't found
  setTimeout(() => {
    observer.disconnect();
    console.warn('Stopped observing: Required elements did not load in time');
  }, 10000); // Stop after 10 seconds
</script>